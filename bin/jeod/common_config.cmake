set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(NOT DEFINED ENV{JEOD_HOME})
   message(FATAL_ERROR "JEOD_HOME is not defined")
else()
   SET(JEOD_HOME $ENV{JEOD_HOME})
endif()

if(NOT DEFINED ENV{TRICK_HOME})
   message(FATAL_ERROR "TRICK_HOME is not defined")
else()
   SET(TRICK_HOME $ENV{TRICK_HOME})
endif()


if(NOT DEFINED ENV{ER7_UTILS_HOME})
   set(ER7_UTILS_HOME ${TRICK_HOME}/trick_source)
else()
   set(ER7_UTILS_HOME $ENV{ER7_UTILS_HOME})
endif()
include_directories(SYSTEM ${ER7_UTILS_HOME})

if(EXISTS ${TRICK_HOME}/bin/trick-version)
   execute_process(COMMAND ${TRICK_HOME}/bin/trick-version -v OUTPUT_VARIABLE TRICK_VERSION)
   execute_process(COMMAND ${TRICK_HOME}/bin/trick-gte TRICK_HOST_CPU OUTPUT_VARIABLE TRICK_HOST_CPU)
else()
   execute_process(COMMAND ${TRICK_HOME}/bin/trick_version -v OUTPUT_VARIABLE TRICK_VERSION)
   execute_process(COMMAND ${TRICK_HOME}/bin/gte TRICK_HOST_CPU OUTPUT_VARIABLE TRICK_HOST_CPU)
endif()
# Assume spaces and newlines from the commands above
string(STRIP ${TRICK_HOST_CPU} TRICK_HOST_CPU)
string(STRIP ${TRICK_VERSION} TRICK_VERSION)
string(REPLACE "." ";" TRICK_VER_SPLIT ${TRICK_VERSION})
list(GET TRICK_VER_SPLIT 0 TRICK_MAJOR)
list(GET TRICK_VER_SPLIT 1 TRICK_MINOR)

if(TRICK_BUILD)
  SET(SUFFIX _jeod_${TRICK_HOST_CPU})
else()
  execute_process(COMMAND uname -s OUTPUT_VARIABLE KERNEL_NAME_RAW)
  string(STRIP "${KERNEL_NAME_RAW}" KERNEL_NAME)
  execute_process(COMMAND uname -r OUTPUT_VARIABLE KERNEL_RELEASE_RAW)
  string(REPLACE "." ";" KERNEL_RELEASE_ARRAY ${KERNEL_RELEASE_RAW})
  list(GET KERNEL_RELEASE_ARRAY 0 KERNEL_RELEASE)
  set(SUFFIX _jeod_${KERNEL_NAME}_${KERNEL_RELEASE})
endif()

if(NOT DEFINED ENV{JEOD_SPICE_DIR})
   message(WARNING "JEOD_SPICE_DIR not set. Trying /data/cspice.")
   set(JEOD_SPICE_DIR /data/cspice)
else()
   set(JEOD_SPICE_DIR $ENV{JEOD_SPICE_DIR})
endif()
if(EXISTS ${JEOD_SPICE_DIR}/include/SpiceUsr.h)
   set(SPICE_INCLUDE ${JEOD_SPICE_DIR}/include)
   set(SPICE_FILTER )
else()
   message(WARNING "Unable to find SpiceUsr.h. Disabling spice build.")
   set(SPICE_INCLUDE)
   set(SPICE_FILTER -name spice -prune -o)
endif()

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include_directories(${JEOD_HOME}/models)
include_directories(SYSTEM ${SPICE_INCLUDE})

if(TRICK_BUILD)
   message(STATUS "TRICK_BUILD specified")
   add_definitions(-DTRICK_VER=${TRICK_MAJOR})
   add_definitions(-DTRICK_MINOR=${TRICK_MINOR})
   add_definitions(-DUSE_ER7_UTILS_INTEGRATORS)
   include_directories(SYSTEM ${TRICK_HOME}/trick_source)
   if(EXISTS ${TRICK_HOME}/include)
      include_directories(SYSTEM ${TRICK_HOME}/include)
      include_directories(SYSTEM ${TRICK_HOME}/include/trick/compat)
   endif()
else()
   message(STATUS "UNIT_TEST specified")
   add_definitions(-DJEOD_UNIT_TEST)
   if(USE_TRICK_MATH)
      include_directories(SYSTEM ${TRICK_HOME}/trick_source)
      if(EXISTS ${TRICK_HOME}/include)
         include_directories(SYSTEM ${TRICK_HOME}/include)
         include_directories(SYSTEM ${TRICK_HOME}/include/trick/compat)
      endif()
   endif()
endif()

set(UT_COVERAGE_COMPILE_FLAGS -pg --coverage)
